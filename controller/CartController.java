//package ra.dev.controller;////import org.springframework.beans.factory.annotation.Autowired;//import org.springframework.http.ResponseEntity;//import org.springframework.security.core.context.SecurityContextHolder;//import org.springframework.web.bind.annotation.*;//import ra.dev.model.dto.request.cart.CartCreate;//import ra.dev.model.dto.request.cart.ListCart;//import ra.dev.model.dto.request.cart.UpdateCart;//import ra.dev.model.dto.request.order.OrdersCreate;//import ra.dev.model.entity.Cart;//import ra.dev.model.entity.Order;//import ra.dev.model.entity.OrderDetail;//import ra.dev.model.entity.Users;//import ra.dev.model.service.*;//import ra.dev.security.CustomUserDetails;////import java.time.LocalDate;//import java.util.ArrayList;//import java.util.List;////@CrossOrigin(origins = "http://localhost:8080")//@RestController//@RequestMapping("api/v1/cart")//public class CartController {//    @Autowired//    private CartService cartService;//    @Autowired//    private OrderDetailService detailService;//    @Autowired//    private OrderService orderService;//    @Autowired//    private UserService userService;//    @Autowired//    private ProductService productService;//////************************************************ User *******************************************8****************//////    @GetMapping("/listCart")//    public List<ListCart> listCart() {//        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();//        List<Cart> cartList = cartService.searchCartByUserID(userDetails.getUserId());//        List<ListCart> listCartsDTO = new ArrayList<>();//        for (Cart cart : cartList) {//            ListCart listCart = new ListCart(//                    cart.getCartID(),//                    cart.getProduct().getProductName(),//                    (cart.getProduct().getPrice() * (100 - cart.getDiscount()) / 100),//                    cart.getQuantity(),//                    cart.getNote(),//                    cart.getDiscount(),//                    (cart.getQuantity() * (cart.getProduct().getPrice() * (100 - cart.getDiscount()) / 100)));//            listCartsDTO.add(listCart);//        }//        return listCartsDTO;//    }////////************************************************ User *******************************************8****************//////    @PostMapping("/addCart")//    public Cart addCart(@RequestBody CartCreate cartCreate) {//////        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();////        Cart cart = new Cart();////        cart.setProduct(productService.findByID(cartCreate.getProductID()));//        cart.setDiscount(productService.findByID(cartCreate.getProductID()).getDiscount());//        cart.setNote(cartCreate.getNote());//        cart.setQuantity(cartCreate.getQuantity());//        cart.setUserID(userDetails.getUserId());//        return cartService.saveOrUpdate(cart);//    }////    @PutMapping("/updateCart/{cartID}")//    public ResponseEntity<?> updateCart(@PathVariable("cartID") int cartID, @RequestBody UpdateCart updateCart) {//        Cart cart = cartService.findByID(cartID);//        cart.setQuantity(updateCart.getQuantity());//        cart.setNote(updateCart.getNote());//        cartService.saveOrUpdate(cart);//        return ResponseEntity.ok("Update Succses !");//    }////    @PutMapping("/delete/{cartID}")//    public List<ListCart> deleteCart(@PathVariable("cartID") int cartID) {//        cartService.delete(cartID);//        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();//        List<Cart> cartList = cartService.searchCartByUserID(userDetails.getUserId());//        List<ListCart> listCartsDTO = new ArrayList<>();//        for (Cart cart : cartList) {//            ListCart listCart = new ListCart(//                    cart.getCartID(),//                    cart.getProduct().getProductName(),//                    (cart.getProduct().getPrice() * (100 - cart.getDiscount()) / 100),//                    cart.getQuantity(),//                    cart.getNote(),//                    cart.getDiscount(),//                    (cart.getQuantity() * (cart.getProduct().getPrice() * (100 - cart.getDiscount()) / 100)));//            listCartsDTO.add(listCart);//        }//        return listCartsDTO;//    }////    @PostMapping("/addToCart")//    public Order addToCart(@RequestBody OrdersCreate ordersCreate) {//        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();//        List<Cart> cartList = cartService.searchCartByUserID(userDetails.getUserId());//        Users users = userService.findByID(userDetails.getUserId());////        Order order = new Order();////        List<OrderDetail> orderDetailList = new ArrayList<>();////        // Lấy thông tin từ cart add vào list order detail//        for (Cart cart : cartList) {//            OrderDetail orderDetail = new OrderDetail();//            orderDetail.setTotalAmount(cart.getQuantity() * (cart.getProduct().getPrice() * (100 - cart.getDiscount()) / 100));//            orderDetail.setPrice(cart.getProduct().getPrice());//            orderDetail.setProductID(cart.getProduct());//            orderDetail.setQuantity(cart.getQuantity());//            orderDetailList.add(orderDetail);//        }//////        // Thêm thông tin vào các trường để tạo order//        order.setNote(ordersCreate.getNote());//        order.setDate(LocalDate.now());//        order.setAddress(users.getAddress());//        order.setEmail(users.getEmail());//        order.setOrderStatus(false);//        order.setFullName(users.getFullName());//        order.setPhoneNumber(users.getPhoneNumber());//        order.setUserID(users);//        order.setListOrderDetail(orderDetailList);//        order.setTotalAmount(totalAmount(cartList));//        orderService.saveOrUpdate(order);////        // thêm list list orderdetail vaof database//        for (Cart cart : cartList) {//            OrderDetail orderDetail = new OrderDetail();//            orderDetail.setOrder(order);//            orderDetail.setTotalAmount(cart.getQuantity() * (cart.getProduct().getPrice() * (100 - cart.getDiscount()) / 100));//            orderDetail.setPrice(cart.getProduct().getPrice());//            orderDetail.setProductID(cart.getProduct());//            orderDetail.setQuantity(cart.getQuantity());//            orderDetailList.add(orderDetail);//            detailService.saveOrUpdate(orderDetail);//            cartService.delete(cart.getCartID());//        }//        return orderService.saveOrUpdate(order);//    }//////    public Integer totalAmount(List<Cart> cartList) {//        Integer totalAmount = 0;//        for (Cart cart : cartList) {//            totalAmount += cart.getQuantity() * (cart.getProduct().getPrice() * (100 - cart.getDiscount()) / 100);//        }//        return totalAmount;//    }//////    @GetMapping("/test")//    public ResponseEntity<?> registerUser() {//        return ResponseEntity.ok(SecurityContextHolder.getContext().getAuthentication().getPrincipal());//    }//////}