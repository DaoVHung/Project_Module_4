package ra.dev.controller;import org.aspectj.weaver.ast.Or;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.web.bind.annotation.*;import ra.dev.model.dto.request.cart.UpdateCart;import ra.dev.model.dto.request.orderDetail.OrderGetDetail;import ra.dev.model.entity.Order;import ra.dev.model.entity.OrderDetail;import ra.dev.model.service.OrderDetailService;import ra.dev.model.service.OrderService;import ra.dev.security.CustomUserDetails;import java.util.ArrayList;import java.util.List;@CrossOrigin(origins = "http://localhost:8080")@RestController@RequestMapping("api/v1/detail")public class OrderDetailController {    @Autowired    private OrderDetailService detailService;    @Autowired    private OrderService orderService;    @GetMapping    public List<OrderDetail> getAll() {        return detailService.findAll();    }    @GetMapping("/{orderID}")    public List<OrderGetDetail> getDetailByOrderID(@PathVariable("orderID") int orderID) {        Order order = orderService.findByID(orderID);        List<OrderGetDetail> getDetailList = new ArrayList<>();        for (OrderDetail detail : order.getListOrderDetail()) {            OrderGetDetail getDetail = new OrderGetDetail();            getDetail.setDetailId(detail.getDetailID());            getDetail.setQuantity(detail.getQuantity());            getDetail.setProductName(detail.getProductID().getProductName());            getDetail.setPrice(detail.getPrice());            getDetail.setTotalAmount(detail.getTotalAmount());            getDetail.setOrderId(detail.getOrder().getOrderID());            getDetailList.add(getDetail);        }        return getDetailList;    }    @PutMapping("/updateCart/{detailID}")    public ResponseEntity<?> updateCart(@PathVariable("detailID") int detailID, @RequestBody UpdateCart updateCart) {        OrderDetail cart = detailService.findByID(detailID);        cart.setQuantity(updateCart.getQuantity());        cart.setNote(updateCart.getNote());        detailService.saveOrUpdate(cart);        return ResponseEntity.ok("Update Succses !");    }    @PutMapping("/delete/{detailID}")    public List<OrderGetDetail> deleteCart(@PathVariable("detailID") int detailID) {        detailService.delete(detailID);        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();        Order order = orderService.findByIDUser(userDetails.getUserId());        List<OrderGetDetail> getDetailList = new ArrayList<>();        for (OrderDetail detail : order.getListOrderDetail()) {            OrderGetDetail getDetail = new OrderGetDetail();            getDetail.setDetailId(detail.getDetailID());            getDetail.setQuantity(detail.getQuantity());            getDetail.setProductName(detail.getProductID().getProductName());            getDetail.setPrice(detail.getPrice());            getDetail.setTotalAmount(detail.getTotalAmount());            getDetail.setOrderId(detail.getOrder().getOrderID());            getDetailList.add(getDetail);        }        return getDetailList;    }}